name: Build Ace Vault APK

on:
  push:
    branches: [ '*' ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip openjdk-11-jdk wget curl
        sudo apt install -y python3-pip build-essential git python3 python3-dev
        sudo apt install -y libffi-dev libssl-dev
        sudo apt install -y libjpeg-dev zlib1g-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install buildozer cython==0.29.33
        pip install kivy==2.1.0 kivymd pillow requests qrcode imageio bcrypt cryptography
        
    - name: Setup Android SDK and NDK
      run: |
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        mkdir -p $HOME/android-sdk/cmdline-tools
        unzip -q commandlinetools-linux-8512546_latest.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        
        yes | sdkmanager --licenses
        sdkmanager "platforms;android-31" "build-tools;31.0.0" "ndk;23.1.7779620"
        
    - name: Create buildozer.spec
      run: |
        cat > buildozer.spec << 'EOF'
        [app]
        title = Ace Vault
        package.name = acevault
        package.domain = com.shyapsneon
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas,txt,json
        version = 1.0
        requirements = python3,setuptools,kivy==2.1.0,kivymd,pillow,requests,qrcode,imageio,bcrypt,cryptography,mutagen,pygame,plyer,android,pyjnius==1.4.2
        main = acevault.py
        orientation = portrait
        android.permissions = WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE,CAMERA,RECORD_AUDIO,INTERNET,ACCESS_NETWORK_STATE,ACCESS_WIFI_STATE,CHANGE_WIFI_STATE,WAKE_LOCK,VIBRATE
        android.api = 31
        android.minapi = 21
        android.ndk = 23c
        android.sdk = 31
        android.arch = arm64-v8a
        android.accept_sdk_license = True
        
        [buildozer]
        log_level = 2
        EOF
        
    - name: Cache buildozer directories
      uses: actions/cache@v3
      with:
        path: |
          ~/.buildozer
          .buildozer
        key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-${{ runner.os }}-
          
    - name: Build APK
      run: |
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export ANDROID_NDK_ROOT=$HOME/android-sdk/ndk/23.1.7779620
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools
        export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        
        buildozer android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: ace-vault-apk
        path: bin/*.apk
        retention-days: 30
        
    - name: List generated files
      run: |
        echo "Generated APK files:"
        ls -la bin/
