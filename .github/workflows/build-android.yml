# .github/workflows/build-android.yml
name: 🤖 Build Android APK

on:
  push:
    branches: [ main, master, imports-removed ]  # Include your current branch
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Manual trigger - works on any branch

jobs:
  build-android:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🐍 Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: ☕ Set up Java JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        ndk-version: '25.2.9519653'
        
    - name: 🔧 Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          git \
          python3-dev \
          libffi-dev \
          libssl-dev \
          libjpeg-dev \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          zip \
          unzip \
          autoconf \
          libtool \
          pkg-config \
          libz-dev \
          ccache
          
    - name: 📦 Install Python build tools
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install buildozer cython==0.29.33
        
    - name: 🗂️ Create buildozer directories
      run: |
        mkdir -p $HOME/.buildozer
        mkdir -p .buildozer
        
    - name: 💾 Cache buildozer global
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-v2-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-global-v2-${{ runner.os }}-
          
    - name: 💾 Cache buildozer build
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-build-v2-${{ runner.os }}-${{ hashFiles('buildozer.spec', '**/*.py') }}
        restore-keys: |
          buildozer-build-v2-${{ runner.os }}-
          
    - name: 📋 Verify buildozer.spec exists
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "❌ buildozer.spec not found!"
          echo "Creating minimal buildozer.spec..."
          cat > buildozer.spec << 'EOF'
        [app]
        title = Monte Card App
        package.name = montecard
        package.domain = com.akhilkast
        source.dir = .
        source.include_exts = py,png,jpg,jpeg,gif,bmp,webp,tiff,kv,atlas,wav,mp3,mp4,avi,mov,mkv,txt,json
        source.include_patterns = assets/*,*.py,*.kv
        version = 0.1
        requirements = python3,kivy,kivymd,pillow,qrcode,requests,mutagen,imageio,jnius,cryptography,bcrypt,plyer,android
        orientation = portrait
        fullscreen = 0
        android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE,CAMERA,RECORD_AUDIO
        android.api = 33
        android.minapi = 21
        android.ndk = 25b
        android.sdk = 33
        android.archs = arm64-v8a,armeabi-v7a
        android.allow_backup = True
        android.bootstrap = sdl2
        osx.python_version = 3
        osx.kivy_version = 1.9.1
        [buildozer]
        log_level = 2
        warn_on_root = 1
        EOF
        fi
        
    - name: 📋 Show buildozer.spec content
      run: |
        echo "📄 buildozer.spec content:"
        cat buildozer.spec
        
    - name: 📋 List Python files
      run: |
        echo "🐍 Python files in project:"
        find . -name "*.py" -type f | head -20
        
    - name: 🔍 Buildozer version check
      run: |
        buildozer --version
        echo "Android SDK: $ANDROID_SDK_ROOT"
        echo "Android NDK: $ANDROID_NDK_ROOT"
        
    - name: 🧹 Clean previous builds
      run: |
        buildozer android clean || true
        
    - name: 🏗️ Build Android APK
      env:
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        ANDROID_NDK_ROOT: ${{ env.ANDROID_NDK_ROOT }}
        P4A_BOOTSTRAP: sdl2
      run: |
        echo "🚀 Starting APK build..."
        
        # Set permissions
        chmod +x $(which buildozer)
        
        # Run buildozer with debug info
        buildozer -v android debug
        
    - name: 📱 List generated APK files
      run: |
        echo "📦 Generated files in bin/:"
        ls -la bin/ || echo "No bin directory found"
        find . -name "*.apk" -type f || echo "No APK files found"
        
    - name: 📤 Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: monte-card-app-${{ github.run_number }}
        path: |
          bin/*.apk
          bin/*.aab
        retention-days: 90
        if-no-files-found: warn
        
    - name: 📤 Upload build logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          .buildozer/android/platform/build-*/logs/
          .buildozer/android/logs/
          .buildozer/*.log
        retention-days: 30
        if-no-files-found: ignore
        
    - name: 📊 Build summary
      if: always()
      run: |
        echo "## 📱 Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f bin/*.apk ]; then
          echo "✅ **APK Build Status**: SUCCESS" >> $GITHUB_STEP_SUMMARY
          echo "📦 **APK Location**: \`bin/\`" >> $GITHUB_STEP_SUMMARY
          echo "📱 **APK Size**: $(du -h bin/*.apk | cut -f1)" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **APK Build Status**: FAILED" >> $GITHUB_STEP_SUMMARY
          echo "📋 Check the build logs for details" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🕒 **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "🔧 **Runner**: ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY
        echo "🌿 **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY

  release:
    needs: build-android
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: 📥 Download APK artifact
      uses: actions/download-artifact@v3
      with:
        name: monte-card-app-${{ github.run_number }}
        path: ./apk
        
    - name: 🚀 Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./apk/*.apk
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
