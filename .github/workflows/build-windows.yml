name: Build Windows Executable

on:
  push:
    branches: [ microsoft-store-submission ]
  pull_request:
    branches: [ microsoft-store-submission ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4  # Keep same version as working
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        pip install kivy
        pip install kivy-deps.angle
        pip install kivy-deps.sdl2
        pip install kivy-deps.glew
        pip install kivymd
        pip install pillow
        pip install qrcode
        pip install bcrypt
        pip install cryptography
        pip install pygame
        pip install plyer
        pip install mutagen
        pip install imageio
        pip install imageio-ffmpeg
        pip install psutil
        # Only install packages that are in your requirements.txt
    
    - name: Set OpenGL Backend Environment
      run: |
        $env:KIVY_GL_BACKEND = "angle_sdl2"
    
    - name: Build Windows executable with Nuitka
      env:
        KIVY_GL_BACKEND: angle_sdl2
      run: |
        python -m nuitka `
        --standalone `
        --assume-yes-for-downloads `
        --windows-disable-console `
        --output-filename=AceInTheHole-Windows.exe `
        --include-package=kivymd `
        --include-package=kivy `
        --include-package=PIL `
        --include-package=qrcode `
        --include-package=bcrypt `
        --include-package=cryptography `
        --include-package=pygame `
        --include-package=plyer `
        --include-package=mutagen `
        --include-package=imageio `
        --include-package=psutil `
        --include-package=tkinter `
        --include-data-files=*.kv=. `
        --include-data-files=*.png=. `
        main.py
    
    - name: Verify build
      run: |
        Write-Host "Listing all files and directories:"
        Get-ChildItem -Recurse -Name
        
        # Check for standalone directory first
        if (Test-Path "main.dist") {
            Write-Host "Found main.dist directory"
            $exePath = "main.dist\AceInTheHole-Windows.exe"
            if (Test-Path $exePath) {
                $size = (Get-Item $exePath).Length / 1MB
                Write-Host "Executable created successfully in standalone directory!"
                Write-Host "Size: $([math]::Round($size, 2)) MB"
                Write-Host "Path: $exePath"
            } else {
                Write-Host "Error: Executable not found in main.dist directory!"
                Write-Host "Contents of main.dist:"
                Get-ChildItem "main.dist" -Name
                exit 1
            }
        } elseif (Test-Path "AceInTheHole-Windows.exe") {
            $size = (Get-Item "AceInTheHole-Windows.exe").Length / 1MB
            Write-Host "Executable created successfully in root directory!"
            Write-Host "Size: $([math]::Round($size, 2)) MB"
        } else {
            Write-Host "Error: Executable not found anywhere!"
            Write-Host "Current directory contents:"
            Get-ChildItem -Name
            exit 1
        }
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: AceInTheHole-Windows-Executable
        path: |
          main.dist/
          AceInTheHole-Windows.exe
        retention-days: 30
        if-no-files-found: error
    
    - name: Create release info
      run: |
        echo "Build completed successfully!" > build-info.txt
        echo "Built with Nuitka on Windows" >> build-info.txt
        echo "Download the AceInTheHole-Windows-Executable artifact" >> build-info.txt
        echo "Extract and run AceInTheHole-Windows.exe" >> build-info.txt
        echo "Build date: %date% %time%" >> build-info.txt
    
    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: Build-Instructions
        path: build-info.txt
