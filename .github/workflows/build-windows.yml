name: Build Kivy App with Nuitka

on:
  push:
    branches: [ main, master, imports-removed-backup ]
  pull_request:
    branches: [ main, master, imports-removed-backup ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Adjust to your Python version
    
    - name: Install system dependencies
      run: |
        # Install Visual Studio Build Tools (needed for Nuitka)
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"
        if ($LASTEXITCODE -eq 3010) { 
          Write-Host "Reboot required but ignoring for CI - installation successful"
          exit 0 
        }
        if ($LASTEXITCODE -ne 0) { 
          Write-Host "Installation failed with exit code $LASTEXITCODE"
          exit $LASTEXITCODE 
        }
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        # Install Cython first (needed for jnius)
        pip install Cython
        # Install all requirements
        pip install -r requirements.txt
    
    - name: Create Nuitka build script
      run: |
        # Create a PowerShell script for the build
        @'
        python -m nuitka ^
          --standalone ^
          --onefile ^
          --windows-disable-console ^
          --enable-plugin=tk-inter ^
          --plugin-enable=numpy ^
          --include-data-dir=assets=assets ^
          --include-data-dir=images=images ^
          --include-data-dir=fonts=fonts ^
          --include-data-dir=data=data ^
          --include-data-dir=sounds=sounds ^
          --windows-icon-from-ico=icon.ico ^
          --product-name="Ace in the Hole" ^
          --file-version="1.0.0" ^
          --product-version="1.0.0" ^
          --file-description="Ace in the Hole App" ^
          --copyright="akhilkashyap777 2024" ^
          --assume-yes-for-downloads ^
          --show-progress ^
          --output-dir=dist ^
          main.py
        '@ | Out-File -FilePath build.bat -Encoding ASCII
    
    - name: Build with Nuitka
      run: |
        .\build.bat
    
    - name: Test executable
      run: |
        # Quick test to ensure the executable was created
        if (Test-Path "dist\main.exe") {
          Write-Host "✅ Executable created successfully!"
          Get-Item "dist\main.exe" | Format-List Name, Length, CreationTime
        } else {
          Write-Host "❌ Executable not found!"
          exit 1
        }
    
    - name: Upload Windows Executable
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist/main.exe
        retention-days: 30
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/main.exe
        asset_name: YourApp-Windows.exe
        asset_content_type: application/octet-stream
