name: Build Windows Executable
on:
  push:
    branches: [ android-removed ]
  pull_request:
    branches: [ android-removed ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install auto-py-to-exe
          pip install pyinstaller
          pip install kivymd
          pip install kivy
          pip install pillow
          pip install requests
          pip install qrcode
          pip install bcrypt
          pip install cryptography
          pip install pygame
          pip install plyer
          pip install opencv-python
          pip install openpyxl
          pip install docx2txt
          pip install mutagen
          pip install imageio
          pip install imageio_ffmpeg
          pip install psutil
          
      - name: Download and setup UPX
        run: |
          $upx_version = "4.2.1"
          $upx_zip = "upx-$upx_version-win64.zip"
          $upx_url = "https://github.com/upx/upx/releases/download/v$upx_version/$upx_zip"
          Write-Host "Downloading UPX from $upx_url"
          Invoke-WebRequest -Uri $upx_url -OutFile $upx_zip
          Expand-Archive -Path $upx_zip -DestinationPath . -Force
          $upx_folder = (Get-ChildItem -Path . -Directory | Where-Object {$_.Name -like "upx-*-win64"}).Name
          Write-Host "UPX extracted to folder: $upx_folder"
          $env:Path += ";$pwd\$upx_folder"
          upx --version
          
      - name: Build with auto-py-to-exe
        run: |
          auto-py-to-exe --noconfirm --onefile --windowed --name "AceInTheHole-Windows" --add-data "." --hidden-import "kivymd" --hidden-import "kivy" --hidden-import "PIL" --hidden-import "requests" --hidden-import "qrcode" --hidden-import "bcrypt" --hidden-import "cryptography" --hidden-import "pygame" --hidden-import "plyer" --hidden-import "cv2" --hidden-import "openpyxl" --hidden-import "docx2txt" --hidden-import "mutagen" --hidden-import "imageio" --hidden-import "psutil" --upx-dir "." main.py
          
      - name: Optimize build size
        run: |
          Write-Host "Build completed. Checking output size..."
          if (Test-Path "dist/AceInTheHole-Windows.exe") {
              $size = (Get-Item "dist/AceInTheHole-Windows.exe").Length / 1MB
              Write-Host "Executable size: $([math]::Round($size, 2)) MB"
          }
          
      - name: Check build size
        run: |
          if (Test-Path "dist") {
              Get-ChildItem -Path "dist" -Recurse | ForEach-Object {
                  Write-Host "$($_.Name): $([math]::Round($_.Length / 1MB, 2)) MB"
              }
          }
          
      - name: Compress executable
        run: |
          if (Test-Path "dist/AceInTheHole-Windows.exe") {
              Write-Host "Executable found and ready for upload"
          } else {
              Write-Host "Error: Executable not found!"
              exit 1
          }
          
      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: AceInTheHole-Windows-Executable
          path: dist/
          retention-days: 30
          
      - name: Create release info
        run: |
          @'
          Build completed successfully!
          Download the AceInTheHole-Windows-Executable artifact
          Extract and run AceInTheHole-Windows.exe
          '@ | Out-File -FilePath "build-info.txt" -Encoding utf8
          
      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: Build-Instructions
          path: build-info.txt
