name: Build Monte Card APK

on:
  push:
    branches: [ android-build ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo6 cmake libffi-dev libssl-dev automake libltdl-dev

    - name: Set up Android SDK manually
      run: |
        # Set environment variables
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools" >> $GITHUB_ENV
        
        # Create SDK directory
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        
        # Download and install command line tools (WORKING VERSION)
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip -d cmdline-tools-temp
        mv cmdline-tools-temp/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
        rm -rf cmdline-tools.zip cmdline-tools-temp
        
        # Make sdkmanager executable
        chmod +x $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager
        
        # Accept licenses and install packages
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools"
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platforms;android-33"
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "build-tools;33.0.0"
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "ndk;25.1.8937393"
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "cmake;3.18.1"
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "patcher;v4"

    - name: Install Python packages
      run: |
        pip install --user --upgrade pip
        pip install --user --upgrade Cython==0.29.36 virtualenv
        pip install --user --upgrade buildozer==1.5.0

    - name: Set environment variables (for Java)
      run: |
        echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.1.8937393" >> $GITHUB_ENV

    - name: Symlink build-tools for Buildozer
      run: |
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk
        ln -sfn $ANDROID_SDK_ROOT/build-tools /home/runner/.buildozer/android/platform/android-sdk/build-tools

    - name: Symlink cmdline-tools for Buildozer compatibility
      run: |
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk
        ln -sfn $ANDROID_SDK_ROOT/cmdline-tools/latest /home/runner/.buildozer/android/platform/android-sdk/tools

    - name: Verify SDK paths
      run: |
        echo "=== Android SDK Structure ==="
        ls -la $ANDROID_SDK_ROOT/ || echo "SDK root not found"
        echo "=== Buildozer Expected Paths ==="
        ls -la /home/runner/.buildozer/android/platform/android-sdk/ || echo "Buildozer paths not created yet"
        echo "=== SDK Manager Location ==="
        find $ANDROID_SDK_ROOT -name "sdkmanager" -type f || echo "sdkmanager not found"

    - name: Create app icon
      run: |
        mkdir -p data
        python3 -c "from PIL import Image, ImageDraw; img = Image.new('RGB', (512, 512), (33, 150, 243)); draw = ImageDraw.Draw(img); draw.rectangle([100, 100, 412, 412], fill=(255, 255, 255)); img.save('data/icon.png'); print('Icon created')"

    - name: Cache buildozer global directory
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}

    - name: Cache buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-

    - name: Build APK
      run: |
        export PATH=$PATH:~/.local/bin/
        yes | buildozer android debug

    - name: List build output
      run: |
        echo "=== Build completed ==="
        ls -la bin/ || echo "No bin directory"
        find . -name "*.apk" -type f || echo "No APK found"

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: monte-card-apk
        path: bin/*.apk
        retention-days: 30
